@model List<EuroApi.Models.Match>

@{
    ViewBag.Title = "Championship";
    Layout = "../Shared/_Layout.cshtml";
}
<div class="row">
    <div class="span3">&nbsp;</div>
    <div class="span6" style="text-align: center;">
        <ul class="nav nav-pills">
            <li class="active liGroups"><a href="#" onclick="getGroups();">Groups</a></li>
            <li class="liMisc"><a href="#" onclick="getPlayerBets();">Misc.</a></li>
        </ul>
    </div>
    <div class="span3">&nbsp;</div>
</div>

<div class="row">
    <div class="bettingArea"></div>
</div>
<script>
    $(document).ready(function () {
        $(".resultBet").live("change", function (event) {
            if (isNaN($(this).val()) || $(this).val() > 20) {
                $(this).val("0");
            }
            var parentDiv = $(this).parent();
            var homeGoals = parentDiv.find(".homeTeam").val();
            var awayGoals = parentDiv.find(".awayTeam").val();
            var group = $(this).attr("group");
            setBet($(this).attr("matchId"), homeGoals, awayGoals, group);
        });
        getGroups();
        setupKnockoutChangeEvents();
    });

    function setupKnockoutChangeEvents() {
        $(".resultBetKnockout").live("change", function () {
            if (isNaN($(this).val()) || $(this).val() > 20) {
                $(this).val("0");
            }
            var parentDiv = $(this).parent();
            var homeGoals = parentDiv.find(".homeTeam").val();
            var awayGoals = parentDiv.find(".awayTeam").val();
            if ($(this).hasClass("quarter")) {
                setKnockoutBet("semiFinals", $(this).attr("matchId"), homeGoals, awayGoals, $(this).attr("homeTeamId"), $(this).attr("awayTeamId"));
            }
            else if ($(this).hasClass("semi")) {
                setKnockoutBet("final", $(this).attr("matchId"), homeGoals, awayGoals, $(this).attr("homeTeamId"), $(this).attr("awayTeamId"));
            }
            else if ($(this).hasClass("final")) {
                setKnockoutBet("final", $(this).attr("matchId"), homeGoals, awayGoals, $(this).attr("homeTeamId"), $(this).attr("awayTeamId"));
            }
        });
    }

    var setKnockoutBet = function (type, matchId, homeGoals, awayGoals, homeTeamId, awayTeamId) {
        $.ajax({
            type: 'POST',
            url: "/KnockoutMatchResultBet/SetBet",
            data: { matchId: matchId, homeGoals: homeGoals, awayGoals: awayGoals, homeTeamId: homeTeamId, awayTeamId: awayTeamId },
            success: function (results) {
                $("." + type).empty();
                $("." + type).html("<h2>" + capitaliseFirstLetter(type) + "</h2>");
                for (var i = 0; i < results.length; i++) {
                    $("." + type).append(results[i]);
                }
            }
        });
    };

    function getGroups() {
        setActive('liGroups');
        $.ajax({
            type: 'POST',
            url: "/MatchResultBet/GetGroups",
            success: function (results) {
                $(".bettingArea").html('');
                $(".bettingArea").html('<h2>Groups</h2>');
                $(".bettingArea").append(results);
            }
        });
    }

    function setBet(matchId, homeGoals, awayGoals, group) {
        $.ajax({
            type: 'POST',
            url: "/MatchResultBet/SetBet",
            data: { matchId: matchId, homeGoals: homeGoals, awayGoals: awayGoals, group: group },
            success: function (results) {
                outputGroup(results, group);
            }
        });
    }

    function getURLParameter(name) {
        return decodeURI(
            (RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, null])[1]
        );
    }

    function outputGroup(results, group) {
        console.log(group);
        $(".groupTable" + group).html(results.html);
    }

    function removeAllUserBets(group) {
        $.ajax({
            type: 'POST',
            url: "/MatchResultBet/RemoveAllBets",
            data: { group: group },
            success: function (results) {
                outputGroup(results, group);
                window.location = location.href;
            }
        });
    }

    function getQuarterFinals() {
        setActive('liQuarter');
        $.ajax({
            type: 'POST',
            url: "/MatchResultBet/QuarterFinals",
            success: function (results) {
                $(".bettingArea").hide();
                $(".bettingArea").html('<h2>Quarter finals</h2>');
                for (var i = 0; i < results.length; i++) {
                    $(".bettingArea").append(results[i]);
                }
                $(".bettingArea").slideDown('fast', function () {

                });
            }
        });
    }

    function getSemiFinals() {
        setActive('liSemi');
        $.ajax({
            type: 'POST',
            url: "/KnockoutMatchResultBet/SemiFinals",
            success: function (results) {
                $(".bettingArea").html('');
                $(".bettingArea").html('<h2>Semifinals</h2>');
                for (var i = 0; i < results.length; i++) {
                    $(".bettingArea").hide();
                    $(".bettingArea").append(results[i]);
                    $(".bettingArea").slideDown('fast', function () {

                    });
                }
            }
        });
    }

    function getFinal() {
        setActive('liFinal');
        $.ajax({
            type: 'POST',
            url: "/KnockoutMatchResultBet/Final",
            success: function (results) {
                $(".bettingArea").html('');
                $(".bettingArea").html('<h2>Final</h2>');
                $(".bettingArea").hide();
                for (var i = 0; i < results.length; i++) {
                    $(".bettingArea").append(results[i]);
                }
                $(".bettingArea").slideDown('fast', function () {

                });
            }
        });
    }

    function setActive(classToSet) {
        resetActive();
        $("." + classToSet).addClass('active');
        function resetActive() {
            $(".nav-pills li").each(function () {
                $(this).removeClass('active');
            });
        }
    }

    function capitaliseFirstLetter(string) {
        return string.charAt(0).toUpperCase() + string.slice(1);
    }

    function getPlayerBets() {
        setActive('liMisc');
        $.ajax({
            type: 'POST',
            url: "/PlayerBet/PlayerBets",
            success: function (results) {
                $(".bettingArea").html('');
                $(".bettingArea").hide();
                $(".bettingArea").append(results);
                $(".bettingArea").slideDown('fast', function () {});
            }
        });
    }
</script>