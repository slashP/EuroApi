@using System.Globalization
@using EuroApi.Models
@model List<Match>

@{
    ViewBag.Title = "Index";
    var userBets = (List<MatchResultBet>) ViewBag.UsersResultBets;
}
<div class="userBetMatches">
    @foreach(var match in Model)
    {
        
        var userBetHome = userBets.Where(x => x.MatchId == match.Id).Select(x => x.HomeTeamGoals).FirstOrDefault();
        var userBetAway = userBets.Where(x => x.MatchId == match.Id).Select(x => x.AwayTeamGoals).FirstOrDefault();
        var untouched = userBets.Any(x => x.MatchId == match.Id) ? "" : "untouched";
        <div class="userBetMatch">
            <div class="teamsInMatch">
                <div><img src="/Content/flags/@(match.HomeTeam.Name)-flag.gif" style='height: 14px;' alt='flag' />
                @match.HomeTeam.Name</div>
                <div><img src="/Content/flags/@(match.GuestTeam.Name)-flag.gif" style='height: 14px;' alt='flag' />                 
                @match.GuestTeam.Name</div>
            </div>
            <input class="resultBet homeTeam @untouched" type="tel" matchId="@match.Id" value="@userBetHome"/>
            <input class="resultBet awayTeam @untouched" type="tel" matchId="@match.Id" value="@userBetAway" />
        </div>
    }
</div>
<div class="groupTable">
    
</div>
<input type="button" onclick="removeAllUserBets();" value="Remove all bets" />

<script>
    $(document).ready(function () {
        $(".resultBet").on("change", function (event) {
            if (isNaN($(this).val()) || $(this).val() > 20) {
                $(this).val("0");
            }
            var parentDiv = $(this).parent();
            var homeGoals = parentDiv.find(".homeTeam").val();
            var awayGoals = parentDiv.find(".awayTeam").val();
            setBet($(this).attr("matchId"), homeGoals, awayGoals);
        });
    });

    function setBet(matchId, homeGoals, awayGoals) {
        $.ajax({
            type: 'POST',
            url: "MatchResultBet/SetBet",
            data: {matchId: matchId, homeGoals: homeGoals, awayGoals: awayGoals, group: window.getURLParameter("group")},
            success: function (results) {
                console.log(results);
                outputGroup(results);
            }
        });
    }
    $.ajax({
        type: 'POST',
        url: "MatchResultBet/GetTeamsInGroup",
        data: {group: window.getURLParameter("group")},
        success: function (results) {
            console.log(results);
            outputGroup(results);
        }
    });
    function getURLParameter(name) {
        return decodeURI(
            (RegExp(name + '=' + '(.+?)(&|$)').exec(location.search) || [, null])[1]
        );
    }

    function outputGroup(results) {
        var html = "<table><tr><th style='width: 30px;'></th><th style='width: 70px;'>Team</th><th>#</th><th>+</th><th>-</th><th>+/-</th><th>P</th></tr>";
        for (var i = 0; i < results.length; i++ ) {
            var team = results[i];
            html += getTeamRow(team.Name, team.MatchCount, team.GoalsScored, team.GoalsConceded, team.GoalDifference, team.Points);
        }
        html += "</table>";
        $(".groupTable").html(html);

        function getTeamRow(teamName, matchCount, goalsScored, goalsConceded, goalDifference, points) {
            return "<tr><td><img src=/Content/flags/" + teamName + "-flag.gif style='height: 14px;' alt='flag' /></td><td>" + teamName + "</td><td>" + matchCount + "</td><td>" + goalsScored + "</td><td>" + goalsConceded + "</td><td>" + goalDifference + "</td><td>" + points + "</td></tr>";
        }
    }

    function removeAllUserBets() {
        $.ajax({
            type: 'POST',
            url: "MatchResultBet/RemoveAllBets",
            data: { group: window.getURLParameter("group") },            
            success: function (results) {
                outputGroup(results);
                $(".resultBet").val("0");
            }
        });
    }
    
</script>